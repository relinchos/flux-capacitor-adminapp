[
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "overview",
        "name": "lbServices",
        "module": "lbServices",
        "description": "The `lbServices` module provides services for interacting with\nthe models exposed by the LoopBack server via the REST API.",
        "parentDoc": {
            "type": "overview"
        },
        "file": "lb-services/lb-services.js",
        "id": "lbServices",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "overview",
        "handler": "ngdoc",
        "search": "lbServices .overview:lbServices lb-services/lb-services.js",
        "sortOn": "lbServices",
        "left": 1,
        "level": 0,
        "root": "lbServices",
        "right": 2
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.User",
        "header": "lbServices.User",
        "object": "",
        "description": "A $resource object for interacting with the `User` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.User",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.User undefined.object:lbServices.User lb-services/lb-services.js",
        "sortOn": "lbServices.User",
        "left": 1,
        "level": 0,
        "root": "lbServices.User",
        "right": 64
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for accessTokens",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__findById__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Find a related item by id for accessTokens.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__findById__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__findById__accessTokens undefined.method:prototype$__findById__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__findById__accessTokens",
        "left": 2,
        "level": 1,
        "root": "lbServices.User",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for accessTokens",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__destroyById__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Delete a related item by id for accessTokens.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__destroyById__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__destroyById__accessTokens undefined.method:prototype$__destroyById__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__destroyById__accessTokens",
        "left": 4,
        "level": 1,
        "root": "lbServices.User",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for accessTokens",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__updateById__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Update a related item by id for accessTokens.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__updateById__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__updateById__accessTokens undefined.method:prototype$__updateById__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__updateById__accessTokens",
        "left": 6,
        "level": 1,
        "root": "lbServices.User",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__get__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Queries accessTokens of User.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__get__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__get__accessTokens undefined.method:prototype$__get__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__get__accessTokens",
        "left": 8,
        "level": 1,
        "root": "lbServices.User",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__create__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Creates a new instance in accessTokens of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__create__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__create__accessTokens undefined.method:prototype$__create__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__create__accessTokens",
        "left": 10,
        "level": 1,
        "root": "lbServices.User",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__delete__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Deletes all accessTokens of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__delete__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__delete__accessTokens undefined.method:prototype$__delete__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__delete__accessTokens",
        "left": 12,
        "level": 1,
        "root": "lbServices.User",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__count__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Counts accessTokens of User.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__count__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__count__accessTokens undefined.method:prototype$__count__accessTokens lb-services/lb-services.js",
        "sortOn": "prototype$__count__accessTokens",
        "left": 14,
        "level": 1,
        "root": "lbServices.User",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.User",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 16,
        "level": 1,
        "root": "lbServices.User",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.User",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 18,
        "level": 1,
        "root": "lbServices.User",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.User",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 20,
        "level": 1,
        "root": "lbServices.User",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.User",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 22,
        "level": 1,
        "root": "lbServices.User",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.User",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 24,
        "level": 1,
        "root": "lbServices.User",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.User",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 26,
        "level": 1,
        "root": "lbServices.User",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.User",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 28,
        "level": 1,
        "root": "lbServices.User",
        "right": 29
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 30,
        "level": 1,
        "root": "lbServices.User",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.User",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 32,
        "level": 1,
        "root": "lbServices.User",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.User",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 34,
        "level": 1,
        "root": "lbServices.User",
        "right": 35
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `include` – `{string=}` - Related objects to include in the response. See the description of return value for more details.\nDefault value: `user`.\n\n- `rememberMe` - `boolean` - Whether the authentication credentials\nshould be remembered in localStorage across app/browser restarts.\nDefault: `true`.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "login",
        "methodOf": "lbServices.User",
        "description": "Login a user with username/email and password.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThe response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n- `user` - `{User}` - Data of the currently logged in user. (`include=user`)",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "login",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "login undefined.method:login lb-services/lb-services.js",
        "sortOn": "login",
        "left": 36,
        "level": 1,
        "root": "lbServices.User",
        "right": 37
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `access_token` – `{string}` - Do not supply this argument, it is automatically extracted from request headers.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "logout",
        "methodOf": "lbServices.User",
        "description": "Logout a user with access token",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "logout",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "logout undefined.method:logout lb-services/lb-services.js",
        "sortOn": "logout",
        "left": 38,
        "level": 1,
        "root": "lbServices.User",
        "right": 39
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `uid` – `{string}` - \n\n- `token` – `{string}` - \n\n- `redirect` – `{string=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "confirm",
        "methodOf": "lbServices.User",
        "description": "Confirm a user registration with email verification token",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "confirm",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "confirm undefined.method:confirm lb-services/lb-services.js",
        "sortOn": "confirm",
        "left": 40,
        "level": 1,
        "root": "lbServices.User",
        "right": 41
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "resetPassword",
        "methodOf": "lbServices.User",
        "description": "Reset password for a user with email",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "resetPassword",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "resetPassword undefined.method:resetPassword lb-services/lb-services.js",
        "sortOn": "resetPassword",
        "left": 42,
        "level": 1,
        "root": "lbServices.User",
        "right": 43
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "getCurrent",
        "methodOf": "lbServices.User",
        "description": "Get data of the currently logged user. Fail with HTTP result 401\nwhen there is no user logged in.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "getCurrent",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "getCurrent undefined.method:getCurrent lb-services/lb-services.js",
        "sortOn": "getCurrent",
        "left": 44,
        "level": 1,
        "root": "lbServices.User",
        "right": 45
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.User",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 46,
        "level": 1,
        "root": "lbServices.User",
        "right": 47
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.User",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 48,
        "level": 1,
        "root": "lbServices.User",
        "right": 49
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 50,
        "level": 1,
        "root": "lbServices.User",
        "right": 51
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 52,
        "level": 1,
        "root": "lbServices.User",
        "right": 53
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "getCachedCurrent",
        "methodOf": "lbServices.User",
        "description": "Get data of the currently logged user that was returned by the last\ncall to {@link lbServices.User#login} or\n{@link lbServices.User#getCurrent}. Return null when there\nis no user logged in or the data of the current user were not fetched\nyet.",
        "returns": "{Object} A User instance.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "getCachedCurrent",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "getCachedCurrent undefined.method:getCachedCurrent lb-services/lb-services.js",
        "sortOn": "getCachedCurrent",
        "left": 54,
        "level": 1,
        "root": "lbServices.User",
        "right": 55
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "isAuthenticated",
        "methodOf": "lbServices.User",
        "returns": "{boolean} True if the current user is authenticated (logged in).",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "isAuthenticated",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "isAuthenticated undefined.method:isAuthenticated lb-services/lb-services.js",
        "sortOn": "isAuthenticated",
        "left": 56,
        "level": 1,
        "root": "lbServices.User",
        "right": 57
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "getCurrentId",
        "methodOf": "lbServices.User",
        "returns": "{Object} Id of the currently logged-in user or null.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "getCurrentId",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "getCurrentId undefined.method:getCurrentId lb-services/lb-services.js",
        "sortOn": "getCurrentId",
        "left": 58,
        "level": 1,
        "root": "lbServices.User",
        "right": 59
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.User",
        "description": "The name of the model represented by this $resource,\ni.e. `User`.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 60,
        "level": 1,
        "root": "lbServices.User",
        "right": 61
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "files",
        "methodOf": "lbServices.User",
        "description": "Queries files of User.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "lb-services/lb-services.js",
        "id": "files",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "files undefined.method:files lb-services/lb-services.js",
        "sortOn": "files",
        "left": 62,
        "level": 1,
        "root": "lbServices.User",
        "right": 63
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.User.files",
        "header": "lbServices.User.files",
        "object": "",
        "description": "The object `User.files` groups methods\nmanipulating `File` instances related to `User`.\n\nCall {@link lbServices.User#files User.files()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.User.files",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.User.files undefined.object:lbServices.User.files lb-services/lb-services.js",
        "sortOn": "lbServices.User.files",
        "left": 1,
        "level": 0,
        "root": "lbServices.User.files",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.User.files",
        "description": "Counts files of User.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User.files"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.User.files",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.User.files",
        "description": "Creates a new instance in files of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.files"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.User.files",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.User.files",
        "description": "Deletes all files of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User.files"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll lb-services/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.User.files",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for files",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.User.files",
        "description": "Delete a related item by id for files.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User.files"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.User.files",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for files",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.User.files",
        "description": "Find a related item by id for files.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.files"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.User.files",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for files",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.User.files",
        "description": "Update a related item by id for files.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.files"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById lb-services/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.User.files",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Role",
        "header": "lbServices.Role",
        "object": "",
        "description": "A $resource object for interacting with the `Role` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Role",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Role undefined.object:lbServices.Role lb-services/lb-services.js",
        "sortOn": "lbServices.Role",
        "left": 1,
        "level": 0,
        "root": "lbServices.Role",
        "right": 46
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for principals",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__findById__principals",
        "methodOf": "lbServices.Role",
        "description": "Find a related item by id for principals.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__findById__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__findById__principals undefined.method:prototype$__findById__principals lb-services/lb-services.js",
        "sortOn": "prototype$__findById__principals",
        "left": 2,
        "level": 1,
        "root": "lbServices.Role",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for principals",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__destroyById__principals",
        "methodOf": "lbServices.Role",
        "description": "Delete a related item by id for principals.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__destroyById__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__destroyById__principals undefined.method:prototype$__destroyById__principals lb-services/lb-services.js",
        "sortOn": "prototype$__destroyById__principals",
        "left": 4,
        "level": 1,
        "root": "lbServices.Role",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for principals",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__updateById__principals",
        "methodOf": "lbServices.Role",
        "description": "Update a related item by id for principals.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__updateById__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__updateById__principals undefined.method:prototype$__updateById__principals lb-services/lb-services.js",
        "sortOn": "prototype$__updateById__principals",
        "left": 6,
        "level": 1,
        "root": "lbServices.Role",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__get__principals",
        "methodOf": "lbServices.Role",
        "description": "Queries principals of Role.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__get__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__get__principals undefined.method:prototype$__get__principals lb-services/lb-services.js",
        "sortOn": "prototype$__get__principals",
        "left": 8,
        "level": 1,
        "root": "lbServices.Role",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__create__principals",
        "methodOf": "lbServices.Role",
        "description": "Creates a new instance in principals of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__create__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__create__principals undefined.method:prototype$__create__principals lb-services/lb-services.js",
        "sortOn": "prototype$__create__principals",
        "left": 10,
        "level": 1,
        "root": "lbServices.Role",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__delete__principals",
        "methodOf": "lbServices.Role",
        "description": "Deletes all principals of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__delete__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__delete__principals undefined.method:prototype$__delete__principals lb-services/lb-services.js",
        "sortOn": "prototype$__delete__principals",
        "left": 12,
        "level": 1,
        "root": "lbServices.Role",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__count__principals",
        "methodOf": "lbServices.Role",
        "description": "Counts principals of Role.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$__count__principals",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__count__principals undefined.method:prototype$__count__principals lb-services/lb-services.js",
        "sortOn": "prototype$__count__principals",
        "left": 14,
        "level": 1,
        "root": "lbServices.Role",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Role",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 16,
        "level": 1,
        "root": "lbServices.Role",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.Role",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 18,
        "level": 1,
        "root": "lbServices.Role",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.Role",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 20,
        "level": 1,
        "root": "lbServices.Role",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Role",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 22,
        "level": 1,
        "root": "lbServices.Role",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.Role",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 24,
        "level": 1,
        "root": "lbServices.Role",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.Role",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 26,
        "level": 1,
        "root": "lbServices.Role",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.Role",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 28,
        "level": 1,
        "root": "lbServices.Role",
        "right": 29
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.Role",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 30,
        "level": 1,
        "root": "lbServices.Role",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Role",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 32,
        "level": 1,
        "root": "lbServices.Role",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.Role",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 34,
        "level": 1,
        "root": "lbServices.Role",
        "right": 35
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.Role",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Role` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 36,
        "level": 1,
        "root": "lbServices.Role",
        "right": 37
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Role",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 38,
        "level": 1,
        "root": "lbServices.Role",
        "right": 39
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Role",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 40,
        "level": 1,
        "root": "lbServices.Role",
        "right": 41
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.Role",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 42,
        "level": 1,
        "root": "lbServices.Role",
        "right": 43
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Role",
        "description": "The name of the model represented by this $resource,\ni.e. `Role`.",
        "parentDoc": {
            "name": "lbServices.Role"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 44,
        "level": 1,
        "root": "lbServices.Role",
        "right": 45
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Email",
        "header": "lbServices.Email",
        "object": "",
        "description": "A $resource object for interacting with the `Email` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Email",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Email undefined.object:lbServices.Email lb-services/lb-services.js",
        "sortOn": "lbServices.Email",
        "left": 1,
        "level": 0,
        "root": "lbServices.Email",
        "right": 4
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Email",
        "description": "The name of the model represented by this $resource,\ni.e. `Email`.",
        "parentDoc": {
            "name": "lbServices.Email"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 2,
        "level": 1,
        "root": "lbServices.Email",
        "right": 3
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.WildcardModel",
        "header": "lbServices.WildcardModel",
        "object": "",
        "description": "A $resource object for interacting with the `WildcardModel` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.WildcardModel",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.WildcardModel undefined.object:lbServices.WildcardModel lb-services/lb-services.js",
        "sortOn": "lbServices.WildcardModel",
        "left": 1,
        "level": 0,
        "root": "lbServices.WildcardModel",
        "right": 34
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.WildcardModel",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.WildcardModel",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.WildcardModel",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.WildcardModel",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.WildcardModel",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.WildcardModel",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.WildcardModel",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.WildcardModel",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.WildcardModel",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.WildcardModel",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method does not accept any data. Supply an empty object.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "checkTokenValidity",
        "methodOf": "lbServices.WildcardModel",
        "description": "<em>\n(The remote method definition does not provide any description.)\n</em>",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `isValid` – `{string=}` -",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "checkTokenValidity",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "checkTokenValidity undefined.method:checkTokenValidity lb-services/lb-services.js",
        "sortOn": "checkTokenValidity",
        "left": 22,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.WildcardModel",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `WildcardModel` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 24,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.WildcardModel",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 26,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.WildcardModel",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 28,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 29
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.WildcardModel",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 30,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 31
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.WildcardModel",
        "description": "The name of the model represented by this $resource,\ni.e. `WildcardModel`.",
        "parentDoc": {
            "name": "lbServices.WildcardModel"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 32,
        "level": 1,
        "root": "lbServices.WildcardModel",
        "right": 33
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Person",
        "header": "lbServices.Person",
        "object": "",
        "description": "A $resource object for interacting with the `Person` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Person",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Person undefined.object:lbServices.Person lb-services/lb-services.js",
        "sortOn": "lbServices.Person",
        "left": 1,
        "level": 0,
        "root": "lbServices.Person",
        "right": 36
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Person",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Person",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.Person",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.Person",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.Person",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.Person",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Person",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Person",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.Person",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.Person",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.Person",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.Person",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.Person",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.Person",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.Person",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.Person",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Person",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.Person",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.Person",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.Person",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.Person",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.Person",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Person",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.Person",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Person",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.Person",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.Person",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.Person",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Person",
        "description": "The name of the model represented by this $resource,\ni.e. `Person`.",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.Person",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "teacherProfile",
        "methodOf": "lbServices.Person",
        "description": "Fetches hasOne relation teacherProfile.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "teacherProfile",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "teacherProfile undefined.method:teacherProfile lb-services/lb-services.js",
        "sortOn": "teacherProfile",
        "left": 32,
        "level": 1,
        "root": "lbServices.Person",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "avatarImage",
        "methodOf": "lbServices.Person",
        "description": "Fetches hasOne relation avatarImage.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person"
        },
        "file": "lb-services/lb-services.js",
        "id": "avatarImage",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "avatarImage undefined.method:avatarImage lb-services/lb-services.js",
        "sortOn": "avatarImage",
        "left": 34,
        "level": 1,
        "root": "lbServices.Person",
        "right": 35
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Person.teacherProfile",
        "header": "lbServices.Person.teacherProfile",
        "object": "",
        "description": "The object `Person.teacherProfile` groups methods\nmanipulating `TeacherProfile` instances related to `Person`.\n\nCall {@link lbServices.Person#teacherProfile Person.teacherProfile()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Person.teacherProfile",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Person.teacherProfile undefined.object:lbServices.Person.teacherProfile lb-services/lb-services.js",
        "sortOn": "lbServices.Person.teacherProfile",
        "left": 1,
        "level": 0,
        "root": "lbServices.Person.teacherProfile",
        "right": 8
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Person.teacherProfile",
        "description": "Creates a new instance in teacherProfile of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person.teacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Person.teacherProfile",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroy",
        "methodOf": "lbServices.Person.teacherProfile",
        "description": "Deletes teacherProfile of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person.teacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroy",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroy undefined.method:destroy lb-services/lb-services.js",
        "sortOn": "destroy",
        "left": 4,
        "level": 1,
        "root": "lbServices.Person.teacherProfile",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Person.teacherProfile",
        "description": "Update teacherProfile of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person.teacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 6,
        "level": 1,
        "root": "lbServices.Person.teacherProfile",
        "right": 7
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Person.avatarImage",
        "header": "lbServices.Person.avatarImage",
        "object": "",
        "description": "The object `Person.avatarImage` groups methods\nmanipulating `File` instances related to `Person`.\n\nCall {@link lbServices.Person#avatarImage Person.avatarImage()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Person.avatarImage",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Person.avatarImage undefined.object:lbServices.Person.avatarImage lb-services/lb-services.js",
        "sortOn": "lbServices.Person.avatarImage",
        "left": 1,
        "level": 0,
        "root": "lbServices.Person.avatarImage",
        "right": 8
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Person.avatarImage",
        "description": "Creates a new instance in avatarImage of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person.avatarImage"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Person.avatarImage",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroy",
        "methodOf": "lbServices.Person.avatarImage",
        "description": "Deletes avatarImage of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Person.avatarImage"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroy",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroy undefined.method:destroy lb-services/lb-services.js",
        "sortOn": "destroy",
        "left": 4,
        "level": 1,
        "root": "lbServices.Person.avatarImage",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Person.avatarImage",
        "description": "Update avatarImage of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Person.avatarImage"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 6,
        "level": 1,
        "root": "lbServices.Person.avatarImage",
        "right": 7
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.TeacherProfile",
        "header": "lbServices.TeacherProfile",
        "object": "",
        "description": "A $resource object for interacting with the `TeacherProfile` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.TeacherProfile",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.TeacherProfile undefined.object:lbServices.TeacherProfile lb-services/lb-services.js",
        "sortOn": "lbServices.TeacherProfile",
        "left": 1,
        "level": 0,
        "root": "lbServices.TeacherProfile",
        "right": 36
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.TeacherProfile",
        "description": "The name of the model represented by this $resource,\ni.e. `TeacherProfile`.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "person",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Fetches belongsTo relation person.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "person",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "person undefined.method:person lb-services/lb-services.js",
        "sortOn": "person",
        "left": 32,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "teacherAvatar",
        "methodOf": "lbServices.TeacherProfile",
        "description": "Fetches hasOne relation teacherAvatar.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile"
        },
        "file": "lb-services/lb-services.js",
        "id": "teacherAvatar",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "teacherAvatar undefined.method:teacherAvatar lb-services/lb-services.js",
        "sortOn": "teacherAvatar",
        "left": 34,
        "level": 1,
        "root": "lbServices.TeacherProfile",
        "right": 35
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.TeacherProfile.teacherAvatar",
        "header": "lbServices.TeacherProfile.teacherAvatar",
        "object": "",
        "description": "The object `TeacherProfile.teacherAvatar` groups methods\nmanipulating `File` instances related to `TeacherProfile`.\n\nCall {@link lbServices.TeacherProfile#teacherAvatar TeacherProfile.teacherAvatar()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.TeacherProfile.teacherAvatar",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.TeacherProfile.teacherAvatar undefined.object:lbServices.TeacherProfile.teacherAvatar lb-services/lb-services.js",
        "sortOn": "lbServices.TeacherProfile.teacherAvatar",
        "left": 1,
        "level": 0,
        "root": "lbServices.TeacherProfile.teacherAvatar",
        "right": 8
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.TeacherProfile.teacherAvatar",
        "description": "Creates a new instance in teacherAvatar of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile.teacherAvatar"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.TeacherProfile.teacherAvatar",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroy",
        "methodOf": "lbServices.TeacherProfile.teacherAvatar",
        "description": "Deletes teacherAvatar of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.TeacherProfile.teacherAvatar"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroy",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroy undefined.method:destroy lb-services/lb-services.js",
        "sortOn": "destroy",
        "left": 4,
        "level": 1,
        "root": "lbServices.TeacherProfile.teacherAvatar",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.TeacherProfile.teacherAvatar",
        "description": "Update teacherAvatar of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.TeacherProfile.teacherAvatar"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 6,
        "level": 1,
        "root": "lbServices.TeacherProfile.teacherAvatar",
        "right": 7
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Int",
        "header": "lbServices.Int",
        "object": "",
        "description": "A $resource object for interacting with the `Int` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Int",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Int undefined.object:lbServices.Int lb-services/lb-services.js",
        "sortOn": "lbServices.Int",
        "left": 1,
        "level": 0,
        "root": "lbServices.Int",
        "right": 6
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "status",
        "methodOf": "lbServices.Int",
        "description": "<em>\n(The remote method definition does not provide any description.)\n</em>",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `status` – `{string=}` -",
        "parentDoc": {
            "name": "lbServices.Int"
        },
        "file": "lb-services/lb-services.js",
        "id": "status",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "status undefined.method:status lb-services/lb-services.js",
        "sortOn": "status",
        "left": 2,
        "level": 1,
        "root": "lbServices.Int",
        "right": 3
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Int",
        "description": "The name of the model represented by this $resource,\ni.e. `Int`.",
        "parentDoc": {
            "name": "lbServices.Int"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 4,
        "level": 1,
        "root": "lbServices.Int",
        "right": 5
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.File",
        "header": "lbServices.File",
        "object": "",
        "description": "A $resource object for interacting with the `File` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.File",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.File undefined.object:lbServices.File lb-services/lb-services.js",
        "sortOn": "lbServices.File",
        "left": 1,
        "level": 0,
        "root": "lbServices.File",
        "right": 42
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.File",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.File",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.File",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.File",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.File",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.File",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.File",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.File",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.File",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.File",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.File",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.File",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.File",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.File",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.File",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.File",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.File",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.File",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.File",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.File",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `req` – `{object=}` - \n\n- `res` – `{object=}` -",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upload",
        "methodOf": "lbServices.File",
        "description": "Uploads a file",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `result` – `{object=}` -",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "upload",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upload undefined.method:upload lb-services/lb-services.js",
        "sortOn": "upload",
        "left": 22,
        "level": 1,
        "root": "lbServices.File",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{string}` - Model id\n\n- `req` – `{object=}` - \n\n- `res` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "content",
        "methodOf": "lbServices.File",
        "description": "Shows file content",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "content",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "content undefined.method:content lb-services/lb-services.js",
        "sortOn": "content",
        "left": 24,
        "level": 1,
        "root": "lbServices.File",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.File",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `File` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 26,
        "level": 1,
        "root": "lbServices.File",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.File",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 28,
        "level": 1,
        "root": "lbServices.File",
        "right": 29
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.File",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 30,
        "level": 1,
        "root": "lbServices.File",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.File",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 32,
        "level": 1,
        "root": "lbServices.File",
        "right": 33
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.File",
        "description": "The name of the model represented by this $resource,\ni.e. `File`.",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 34,
        "level": 1,
        "root": "lbServices.File",
        "right": 35
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "owner",
        "methodOf": "lbServices.File",
        "description": "Fetches belongsTo relation owner.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "owner",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "owner undefined.method:owner lb-services/lb-services.js",
        "sortOn": "owner",
        "left": 36,
        "level": 1,
        "root": "lbServices.File",
        "right": 37
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "personAvatarTarget",
        "methodOf": "lbServices.File",
        "description": "Fetches hasOne relation personAvatarTarget.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "personAvatarTarget",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "personAvatarTarget undefined.method:personAvatarTarget lb-services/lb-services.js",
        "sortOn": "personAvatarTarget",
        "left": 38,
        "level": 1,
        "root": "lbServices.File",
        "right": 39
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "teacherProfileAvatarTarget",
        "methodOf": "lbServices.File",
        "description": "Fetches hasOne relation teacherProfileAvatarTarget.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File"
        },
        "file": "lb-services/lb-services.js",
        "id": "teacherProfileAvatarTarget",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "teacherProfileAvatarTarget undefined.method:teacherProfileAvatarTarget lb-services/lb-services.js",
        "sortOn": "teacherProfileAvatarTarget",
        "left": 40,
        "level": 1,
        "root": "lbServices.File",
        "right": 41
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.File.personAvatarTarget",
        "header": "lbServices.File.personAvatarTarget",
        "object": "",
        "description": "The object `File.personAvatarTarget` groups methods\nmanipulating `Person` instances related to `File`.\n\nCall {@link lbServices.File#personAvatarTarget File.personAvatarTarget()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.File.personAvatarTarget",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.File.personAvatarTarget undefined.object:lbServices.File.personAvatarTarget lb-services/lb-services.js",
        "sortOn": "lbServices.File.personAvatarTarget",
        "left": 1,
        "level": 0,
        "root": "lbServices.File.personAvatarTarget",
        "right": 8
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.File.personAvatarTarget",
        "description": "Creates a new instance in personAvatarTarget of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File.personAvatarTarget"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.File.personAvatarTarget",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroy",
        "methodOf": "lbServices.File.personAvatarTarget",
        "description": "Deletes personAvatarTarget of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File.personAvatarTarget"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroy",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroy undefined.method:destroy lb-services/lb-services.js",
        "sortOn": "destroy",
        "left": 4,
        "level": 1,
        "root": "lbServices.File.personAvatarTarget",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.File.personAvatarTarget",
        "description": "Update personAvatarTarget of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File.personAvatarTarget"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 6,
        "level": 1,
        "root": "lbServices.File.personAvatarTarget",
        "right": 7
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.File.teacherProfileAvatarTarget",
        "header": "lbServices.File.teacherProfileAvatarTarget",
        "object": "",
        "description": "The object `File.teacherProfileAvatarTarget` groups methods\nmanipulating `TeacherProfile` instances related to `File`.\n\nCall {@link lbServices.File#teacherProfileAvatarTarget File.teacherProfileAvatarTarget()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.File.teacherProfileAvatarTarget",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.File.teacherProfileAvatarTarget undefined.object:lbServices.File.teacherProfileAvatarTarget lb-services/lb-services.js",
        "sortOn": "lbServices.File.teacherProfileAvatarTarget",
        "left": 1,
        "level": 0,
        "root": "lbServices.File.teacherProfileAvatarTarget",
        "right": 8
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.File.teacherProfileAvatarTarget",
        "description": "Creates a new instance in teacherProfileAvatarTarget of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File.teacherProfileAvatarTarget"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.File.teacherProfileAvatarTarget",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroy",
        "methodOf": "lbServices.File.teacherProfileAvatarTarget",
        "description": "Deletes teacherProfileAvatarTarget of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.File.teacherProfileAvatarTarget"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroy",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroy undefined.method:destroy lb-services/lb-services.js",
        "sortOn": "destroy",
        "left": 4,
        "level": 1,
        "root": "lbServices.File.teacherProfileAvatarTarget",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.File.teacherProfileAvatarTarget",
        "description": "Update teacherProfileAvatarTarget of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `TeacherProfile` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.File.teacherProfileAvatarTarget"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 6,
        "level": 1,
        "root": "lbServices.File.teacherProfileAvatarTarget",
        "right": 7
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.PublicInfo",
        "header": "lbServices.PublicInfo",
        "object": "",
        "description": "A $resource object for interacting with the `PublicInfo` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.PublicInfo",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.PublicInfo undefined.object:lbServices.PublicInfo lb-services/lb-services.js",
        "sortOn": "lbServices.PublicInfo",
        "left": 1,
        "level": 0,
        "root": "lbServices.PublicInfo",
        "right": 8
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{string=}` - Model id\n\n- `req` – `{object=}` - \n\n- `res` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "teacherDetails",
        "methodOf": "lbServices.PublicInfo",
        "description": "Shows Teacher's Details",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `PublicInfo` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.PublicInfo"
        },
        "file": "lb-services/lb-services.js",
        "id": "teacherDetails",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "teacherDetails undefined.method:teacherDetails lb-services/lb-services.js",
        "sortOn": "teacherDetails",
        "left": 2,
        "level": 1,
        "root": "lbServices.PublicInfo",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `req` – `{object=}` - \n\n- `res` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "teacherList",
        "methodOf": "lbServices.PublicInfo",
        "description": "Shows Teacher list",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `PublicInfo` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.PublicInfo"
        },
        "file": "lb-services/lb-services.js",
        "id": "teacherList",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "teacherList undefined.method:teacherList lb-services/lb-services.js",
        "sortOn": "teacherList",
        "left": 4,
        "level": 1,
        "root": "lbServices.PublicInfo",
        "right": 5
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.PublicInfo",
        "description": "The name of the model represented by this $resource,\ni.e. `PublicInfo`.",
        "parentDoc": {
            "name": "lbServices.PublicInfo"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 6,
        "level": 1,
        "root": "lbServices.PublicInfo",
        "right": 7
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Course",
        "header": "lbServices.Course",
        "object": "",
        "description": "A $resource object for interacting with the `Course` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Course",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Course undefined.object:lbServices.Course lb-services/lb-services.js",
        "sortOn": "lbServices.Course",
        "left": 1,
        "level": 0,
        "root": "lbServices.Course",
        "right": 38
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Course",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Course",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.Course",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.Course",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.Course",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.Course",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Course",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Course",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.Course",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.Course",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.Course",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.Course",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.Course",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.Course",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.Course",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.Course",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Course",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.Course",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.Course",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.Course",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.Course",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Course` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.Course",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Course",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.Course",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Course",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.Course",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.Course",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.Course",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Course",
        "description": "The name of the model represented by this $resource,\ni.e. `Course`.",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.Course",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "teachersAssigned",
        "methodOf": "lbServices.Course",
        "description": "Queries teachersAssigned of Course.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "teachersAssigned",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "teachersAssigned undefined.method:teachersAssigned lb-services/lb-services.js",
        "sortOn": "teachersAssigned",
        "left": 32,
        "level": 1,
        "root": "lbServices.Course",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "languages",
        "methodOf": "lbServices.Course",
        "description": "Queries languages of Course.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "languages",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "languages undefined.method:languages lb-services/lb-services.js",
        "sortOn": "languages",
        "left": 34,
        "level": 1,
        "root": "lbServices.Course",
        "right": 35
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "seasons",
        "methodOf": "lbServices.Course",
        "description": "Queries seasons of Course.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course"
        },
        "file": "lb-services/lb-services.js",
        "id": "seasons",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "seasons undefined.method:seasons lb-services/lb-services.js",
        "sortOn": "seasons",
        "left": 36,
        "level": 1,
        "root": "lbServices.Course",
        "right": 37
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Course.teachersAssigned",
        "header": "lbServices.Course.teachersAssigned",
        "object": "",
        "description": "The object `Course.teachersAssigned` groups methods\nmanipulating `Person` instances related to `Course`.\n\nCall {@link lbServices.Course#teachersAssigned Course.teachersAssigned()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Course.teachersAssigned",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Course.teachersAssigned undefined.object:lbServices.Course.teachersAssigned lb-services/lb-services.js",
        "sortOn": "lbServices.Course.teachersAssigned",
        "left": 1,
        "level": 0,
        "root": "lbServices.Course.teachersAssigned",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Course.teachersAssigned",
        "description": "Counts teachersAssigned of Course.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Course.teachersAssigned"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.Course.teachersAssigned",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Course.teachersAssigned",
        "description": "Creates a new instance in teachersAssigned of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.teachersAssigned"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.Course.teachersAssigned",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.Course.teachersAssigned",
        "description": "Deletes all teachersAssigned of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course.teachersAssigned"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll lb-services/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.Course.teachersAssigned",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for teachersAssigned",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Course.teachersAssigned",
        "description": "Delete a related item by id for teachersAssigned.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course.teachersAssigned"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Course.teachersAssigned",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for teachersAssigned",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Course.teachersAssigned",
        "description": "Find a related item by id for teachersAssigned.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.teachersAssigned"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.Course.teachersAssigned",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for teachersAssigned",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.Course.teachersAssigned",
        "description": "Update a related item by id for teachersAssigned.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Person` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.teachersAssigned"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById lb-services/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.Course.teachersAssigned",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Course.languages",
        "header": "lbServices.Course.languages",
        "object": "",
        "description": "The object `Course.languages` groups methods\nmanipulating `Language` instances related to `Course`.\n\nCall {@link lbServices.Course#languages Course.languages()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Course.languages",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Course.languages undefined.object:lbServices.Course.languages lb-services/lb-services.js",
        "sortOn": "lbServices.Course.languages",
        "left": 1,
        "level": 0,
        "root": "lbServices.Course.languages",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Course.languages",
        "description": "Counts languages of Course.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Course.languages"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.Course.languages",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Course.languages",
        "description": "Creates a new instance in languages of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.languages"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.Course.languages",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.Course.languages",
        "description": "Deletes all languages of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course.languages"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll lb-services/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.Course.languages",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for languages",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Course.languages",
        "description": "Delete a related item by id for languages.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course.languages"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Course.languages",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for languages",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Course.languages",
        "description": "Find a related item by id for languages.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.languages"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.Course.languages",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for languages",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.Course.languages",
        "description": "Update a related item by id for languages.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.languages"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById lb-services/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.Course.languages",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Course.seasons",
        "header": "lbServices.Course.seasons",
        "object": "",
        "description": "The object `Course.seasons` groups methods\nmanipulating `Season` instances related to `Course`.\n\nCall {@link lbServices.Course#seasons Course.seasons()}\nto query all related instances.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Course.seasons",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Course.seasons undefined.object:lbServices.Course.seasons lb-services/lb-services.js",
        "sortOn": "lbServices.Course.seasons",
        "left": 1,
        "level": 0,
        "root": "lbServices.Course.seasons",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Course.seasons",
        "description": "Counts seasons of Course.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Course.seasons"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.Course.seasons",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Course.seasons",
        "description": "Creates a new instance in seasons of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.seasons"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.Course.seasons",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.Course.seasons",
        "description": "Deletes all seasons of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course.seasons"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll lb-services/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.Course.seasons",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for seasons",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Course.seasons",
        "description": "Delete a related item by id for seasons.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Course.seasons"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Course.seasons",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for seasons",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Course.seasons",
        "description": "Find a related item by id for seasons.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.seasons"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.Course.seasons",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for seasons",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.Course.seasons",
        "description": "Update a related item by id for seasons.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Course.seasons"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById lb-services/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.Course.seasons",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Language",
        "header": "lbServices.Language",
        "object": "",
        "description": "A $resource object for interacting with the `Language` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Language",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Language undefined.object:lbServices.Language lb-services/lb-services.js",
        "sortOn": "lbServices.Language",
        "left": 1,
        "level": 0,
        "root": "lbServices.Language",
        "right": 32
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Language",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Language",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.Language",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.Language",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.Language",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.Language",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Language",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Language",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.Language",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.Language",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.Language",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.Language",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.Language",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.Language",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.Language",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.Language",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Language",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.Language",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.Language",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.Language",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.Language",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Language` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.Language",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Language",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.Language",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Language",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.Language",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.Language",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.Language",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Language",
        "description": "The name of the model represented by this $resource,\ni.e. `Language`.",
        "parentDoc": {
            "name": "lbServices.Language"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.Language",
        "right": 31
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Season",
        "header": "lbServices.Season",
        "object": "",
        "description": "A $resource object for interacting with the `Season` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.Season",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Season undefined.object:lbServices.Season lb-services/lb-services.js",
        "sortOn": "lbServices.Season",
        "left": 1,
        "level": 0,
        "root": "lbServices.Season",
        "right": 32
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Season",
        "description": "Create a new instance of the model and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create lb-services/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Season",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.Season",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert lb-services/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.Season",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.Season",
        "description": "Check whether a model instance exists in the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists lb-services/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.Season",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id\n\n- `filter` – `{object=}` - Filter defining fields and include",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Season",
        "description": "Find a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById lb-services/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Season",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.Season",
        "description": "Find all instances of the model matched by filter from the data source.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find lb-services/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.Season",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.Season",
        "description": "Find first instance of the model matched by filter from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne lb-services/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.Season",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.Season",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll lb-services/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.Season",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.Season",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById lb-services/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.Season",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Season",
        "description": "Count instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count lb-services/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.Season",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.Season",
        "description": "Update attributes for a model instance and persist it into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes lb-services/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.Season",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.Season",
        "description": "Update an existing model instance or insert a new one into the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Season` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate lb-services/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.Season",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Season",
        "description": "Update instances of the model matched by where from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update lb-services/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.Season",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Season",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById lb-services/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.Season",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.Season",
        "description": "Delete a model instance by id from the data source.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById lb-services/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.Season",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Season",
        "description": "The name of the model represented by this $resource,\ni.e. `Season`.",
        "parentDoc": {
            "name": "lbServices.Season"
        },
        "file": "lb-services/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName lb-services/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.Season",
        "right": 31
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.LoopBackResourceProvider",
        "header": "lbServices.LoopBackResourceProvider",
        "description": "Use `LoopBackResourceProvider` to change the global configuration\nsettings used by all models. Note that the provider is available\nto Configuration Blocks only, see\n{@link https://docs.angularjs.org/guide/module#module-loading-dependencies Module Loading & Dependencies}\nfor more details.\n\n## Example\n\n```js\nangular.module('app')\n.config(function(LoopBackResourceProvider) {\nLoopBackResourceProvider.setAuthHeader('X-Access-Token');\n});\n```",
        "parentDoc": {},
        "file": "lb-services/lb-services.js",
        "id": "lbServices.LoopBackResourceProvider",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.LoopBackResourceProvider undefined.object:lbServices.LoopBackResourceProvider lb-services/lb-services.js",
        "sortOn": "lbServices.LoopBackResourceProvider",
        "left": 1,
        "level": 0,
        "root": "lbServices.LoopBackResourceProvider",
        "right": 6
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "string",
                        "type": "string"
                    }
                ],
                "varName": "header",
                "altName": null,
                "description": "The header name to use, e.g. `X-Access-Token`",
                "optional": false,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "setAuthHeader",
        "methodOf": "lbServices.LoopBackResourceProvider",
        "description": "Configure the REST transport to use a different header for sending\nthe authentication token. It is sent in the `Authorization` header\nby default.",
        "parentDoc": {
            "name": "lbServices.LoopBackResourceProvider"
        },
        "file": "lb-services/lb-services.js",
        "id": "setAuthHeader",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "setAuthHeader undefined.method:setAuthHeader lb-services/lb-services.js",
        "sortOn": "setAuthHeader",
        "left": 2,
        "level": 1,
        "root": "lbServices.LoopBackResourceProvider",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "string",
                        "type": "string"
                    }
                ],
                "varName": "url",
                "altName": null,
                "description": "The URL to use, e.g. `/api` or `//example.com/api`.",
                "optional": false,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "setUrlBase",
        "methodOf": "lbServices.LoopBackResourceProvider",
        "description": "Change the URL of the REST API server. By default, the URL provided\nto the code generator (`lb-ng` or `grunt-loopback-sdk-angular`) is used.",
        "parentDoc": {
            "name": "lbServices.LoopBackResourceProvider"
        },
        "file": "lb-services/lb-services.js",
        "id": "setUrlBase",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "setUrlBase undefined.method:setUrlBase lb-services/lb-services.js",
        "sortOn": "setUrlBase",
        "left": 4,
        "level": 1,
        "root": "lbServices.LoopBackResourceProvider",
        "right": 5
    }
]